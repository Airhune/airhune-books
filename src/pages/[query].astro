---
import BookCard from "../components/BookCard.astro";
import Search from "../components/Search.astro";
import Layout from "../layouts/Layout.astro";

const { query } = Astro.params;

const searchTerm = Astro.url.searchParams.get('q') || '';
let searchResults = [];
const lang = "en";

if (searchTerm.trim()) {
    const search_response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(searchTerm)}&maxResults=36&langRestrict=${lang}`);
    const results = await search_response.json();
    searchResults = results.items?.map((item: any) => item) || [];
}

// Manejar nueva bÃºsqueda
let newSearchTerm = '';
const handleNewSearch = async () => {
    if (newSearchTerm.trim()) {
        return Astro.redirect(`/search/${encodeURIComponent(newSearchTerm)}`);
    }
};
---


<Layout title={`Search results - Airhune Books`}>
	<section class="p-5 rounded-4xl">
        <div class="container mx-auto">

            <h2 class="font-bold text-gray-200 text-5xl text-center pb-20 pt-20">
                {searchTerm.trim() ? (
                    <span>Search results for: <span class="text-pink-600">{searchTerm}</span></span>
                ) : (
                    <span>Search</span>
                )}
            </h2>

            <Search />

            {searchTerm.trim() && searchResults.length === 0 ? (
                <p class="text-gray-200 text-center">No se encontraron resultados.</p>
            ) : searchResults.length > 0 ? (
                <div class="container grid gap-6 md:grid-cols-6">
                    {searchResults.map((book: any) => (
                        <BookCard
                            id={book.id}
                            thumbnail={book.volumeInfo.imageLinks?.thumbnail}
                            title={book.volumeInfo.title}
                            authors={book.volumeInfo.authors}
                        />
                    ))}
                </div>
            ) : null}
        </div>
    </section>
</Layout>